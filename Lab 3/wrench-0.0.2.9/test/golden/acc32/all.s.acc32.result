0:	input_addr
4:	output_addr
8:	n
12:	result
16:	const_1
20:	const_2
24:	const_3
28:	const_4
32:	const_5
36:	temp
40:	_start
285:	jump_target
---
mem[0..3]: 	80 00 00 00	@"input_addr"
mem[4..7]: 	84 00 00 00	@"output_addr"
mem[8..11]: 	00 00 00 00	@"n"
mem[12..15]: 	01 00 00 00	@"result"
mem[16..19]: 	01 00 00 00	@"const_1"
mem[20..23]: 	02 00 00 00	@"const_2"
mem[24..27]: 	03 00 00 00	@"const_3"
mem[28..31]: 	04 00 00 00	@"const_4"
mem[32..35]: 	05 00 00 00	@"const_5"
mem[36..39]: 	00 00 00 00	@"temp"
mem[40..44]: 	LoadImm 16 	@_start
mem[45..49]: 	StoreAddr 36
mem[50..54]: 	LoadAddr 16
mem[55..59]: 	StoreAddr 36
mem[60..62]: 	Load 2
mem[63..67]: 	StoreAddr 36
mem[68..72]: 	LoadInd 0
mem[73..77]: 	StoreAddr 36
mem[78..82]: 	LoadImm 32
mem[83..87]: 	StoreAddr 36
mem[88..90]: 	Load 48
mem[91..93]: 	Store 2
mem[94..98]: 	LoadImm 64
mem[99..103]: 	StoreInd 0
mem[104..108]: 	LoadAddr 20
mem[109..111]: 	Add 24
mem[112..116]: 	StoreAddr 36
mem[117..121]: 	LoadAddr 32
mem[122..124]: 	Sub 24
mem[125..129]: 	StoreAddr 36
mem[130..134]: 	LoadAddr 20
mem[135..137]: 	Mul 24
mem[138..142]: 	StoreAddr 36
mem[143..147]: 	LoadAddr 32
mem[148..150]: 	Div 20
mem[151..155]: 	StoreAddr 36
mem[156..160]: 	LoadAddr 32
mem[161..163]: 	Rem 24
mem[164..168]: 	StoreAddr 36
mem[169..173]: 	LoadAddr 16
mem[174..176]: 	ShiftL 20
mem[177..181]: 	StoreAddr 36
mem[182..186]: 	LoadAddr 28
mem[187..189]: 	ShiftR 16
mem[190..194]: 	StoreAddr 36
mem[195..199]: 	LoadAddr 24
mem[200..202]: 	And 16
mem[203..207]: 	StoreAddr 36
mem[208..212]: 	LoadAddr 20
mem[213..215]: 	Or 16
mem[216..220]: 	StoreAddr 36
mem[221..225]: 	LoadAddr 24
mem[226..228]: 	Xor 16
mem[229..233]: 	StoreAddr 36
mem[234..238]: 	LoadAddr 32
mem[239..239]: 	Not
mem[240..244]: 	StoreAddr 36
mem[245..249]: 	LoadImm 0
mem[250..254]: 	Beqz 285
mem[255..259]: 	LoadImm 1
mem[260..264]: 	Bnez 285
mem[265..269]: 	LoadImm 2
mem[270..274]: 	Bgz 285
mem[275..279]: 	LoadImm 255
mem[280..284]: 	Blz 285
mem[285..285]: 	Halt 	@jump_target
---
